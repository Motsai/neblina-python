import os
import sipconfig

neblina_cpp_include_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "../../neblina-cpp/include")

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = "neblina_communication.sbf"

# Get the SIP configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.  Note that we tell SIP where to find the qt
# module's specification files using the -I flag.
os.system(" ".join([config.sip_bin, "-c", ".", "-b", build_file, "../neblina_communication.sip"]))

# We are going to install the SIP specification file for this module and
# its configuration module.
installs = []

installs.append(["neblina_communication.sip", os.path.join(config.default_sip_dir, "neblina_communication")])

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(config, build_file)

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
# ".dll" extension on Windows).
makefile.extra_include_dirs = [neblina_cpp_include_path]
makefile.extra_libs = ["neblina_communication"]

# Generate the Makefile itself.
makefile.generate()